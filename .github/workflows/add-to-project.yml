name: Update Priority in GitHub Project

on:
  issues:
    types: [opened, labeled]

permissions:
  contents: write
  issues: write

jobs:
  update-priority:
    runs-on: ubuntu-latest

    steps:
      - name: Update Priority Field in Project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.SRIS_TOKEN }}
          script: |
            const labelPriorityMap = {
              'low': 'Low',
              'medium': 'Medium',
              'high': 'High'
            };

            const issue = context.payload.issue;
            const labels = issue.labels.map(label => label.name.toLowerCase());
            const matchingLabel = labels.find(label => labelPriorityMap[label]);

            if (!matchingLabel) {
              console.log("No matching priority label found.");
              return;
            }

            const issueNodeId = issue.node_id;
            const priorityValue = labelPriorityMap[matchingLabel];

            const projectData = await github.graphql(`
              query($issueId: ID!) {
                node(id: $issueId) {
                  ... on Issue {
                    projectItems(first: 10) {
                      nodes {
                        id
                        project {
                          id
                          fields(first: 20) {
                            nodes {
                              id
                              name
                              ... on ProjectV2SingleSelectField {
                                options {
                                  id
                                  name
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            `, {
              issueId: issueNodeId
            });

            const projectItem = projectData.node.projectItems.nodes[0];
            if (!projectItem) {
              console.log("No project item found for this issue.");
              return;
            }

            const priorityField = projectItem.project.fields.nodes.find(
              field => field.name === "Priority"
            );

            if (!priorityField || !priorityField.options) {
              console.log("Priority field not found or doesn't have options.");
              return;
            }

            const matchedOption = priorityField.options.find(
              opt => opt.name.toLowerCase() === priorityValue.toLowerCase()
            );

            if (!matchedOption) {
              console.log(`No matching priority option for '${priorityValue}'`);
              return;
            }

            await github.graphql(`
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: {
                    singleSelectOptionId: $optionId
                  }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }
            `, {
              projectId: projectItem.project.id,
              itemId: projectItem.id,
              fieldId: priorityField.id,
              optionId: matchedOption.id
            });

            console.log(`Updated issue #${issue.number} with Priority '${priorityValue}'`);
