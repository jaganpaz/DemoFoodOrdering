name: Set Project Priority from Issue Label

on:
  issues:
    types: [opened, labeled]

jobs:
  set-priority:
    runs-on: ubuntu-latest
    permissions:
      issues: read
      contents: read
      project: write  # Required to update project fields

    steps:
      - name: Set priority in GitHub Project
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const labels = issue.labels.map(label => label.name.toLowerCase());

            // Map labels to project priority values
            const priorityMap = {
              'low': 'Low',
              'medium': 'Medium',
              'high': 'High',
              'critical': 'Critical'
            };

            // Find the first matching priority label
            const matchedLabel = Object.keys(priorityMap).find(label => labels.includes(label));
            if (!matchedLabel) {
              console.log("No priority label found. Skipping.");
              return;
            }

            const priorityValue = priorityMap[matchedLabel];

            // Get project items for this issue
            const issueNodeId = issue.node_id;

            const projects = await github.graphql(`
              query($issueId: ID!) {
                node(id: $issueId) {
                  ... on Issue {
                    projectItems(first: 10) {
                      nodes {
                        id
                        project {
                          id
                        }
                      }
                    }
                  }
                }
              }
            `, {
              issueId: issueNodeId
            });

            const projectItem = projects.node.projectItems.nodes[0];
            if (!projectItem) {
              console.log("Issue not found in any project.");
              return;
            }

            const projectId = projectItem.project.id;
            const itemId = projectItem.id;

            // Get project fields
            const fieldsQuery = await github.graphql(`
              query($projectId: ID!) {
                node(id: $projectId) {
                  ... on ProjectV2 {
                    fields(first: 20) {
                      nodes {
                        ... on ProjectV2SingleSelectField {
                          id
                          name
                          options {
                            id
                            name
                          }
                        }
                      }
                    }
                  }
                }
              }
            `, {
              projectId
            });

            const priorityField = fieldsQuery.node.fields.nodes.find(f => f.name === "Priority");
            if (!priorityField) {
              console.log("Priority field not found in project.");
              return;
            }

            const option = priorityField.options.find(opt => opt.name === priorityValue);
            if (!option) {
              console.log(Priority option '${priorityValue}' not found.);
              return;
            }

            // Update the priority field
            await github.graphql(`
              mutation($itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: "${projectId}",
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: {
                    singleSelectOptionId: $optionId
                  }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }
            `, {
              itemId,
              fieldId: priorityField.id,
              optionId: option.id
            });

            console.log(Set priority to '${priorityValue}' for issue #${issue.number});
